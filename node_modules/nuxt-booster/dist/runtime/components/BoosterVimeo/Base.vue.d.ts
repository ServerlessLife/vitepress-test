declare const _default: import("vue").DefineComponent<{
    autoplay: {
        type: BooleanConstructor;
        default: boolean;
    };
    mute: {
        type: BooleanConstructor;
        default: undefined;
    };
    url: {
        type: StringConstructor;
        required: true;
    };
    title: {
        type: StringConstructor;
        required: false;
        default: null;
    };
    options: {
        type: ObjectConstructor;
        default(): {};
    };
    posterSources: {
        type: ArrayConstructor;
        default(): {
            src: undefined;
            media: string;
            sizes: {
                default: string;
            };
        }[];
    };
}, {
    playerSrc: import("vue").ComputedRef<any>;
    videoId: string;
    iframeMode: import("vue").Ref<boolean>;
    src: import("vue").Ref<null>;
    script: import("vue").Ref<never[]>;
    videoData: import("vue").Ref<null>;
}, {
    inert: boolean;
    player: null;
    ready: boolean;
    loading: boolean;
    playing: boolean;
    isTouchDevice: any;
}, {
    playerTitle(): string | null;
    playerOptions(): {
        playsinline: boolean;
        autoplay: boolean;
        muted: any;
        dnt: boolean;
        autopause: boolean;
    };
    pictureDataset(): {
        formats: any;
        title: string;
        sources: any[];
    };
}, {
    onInit(): void;
    onPlayerStateChange(state: any): void;
    onLoad(e: any): Promise<void>;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("playing" | "ready")[], "playing" | "ready", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    autoplay: {
        type: BooleanConstructor;
        default: boolean;
    };
    mute: {
        type: BooleanConstructor;
        default: undefined;
    };
    url: {
        type: StringConstructor;
        required: true;
    };
    title: {
        type: StringConstructor;
        required: false;
        default: null;
    };
    options: {
        type: ObjectConstructor;
        default(): {};
    };
    posterSources: {
        type: ArrayConstructor;
        default(): {
            src: undefined;
            media: string;
            sizes: {
                default: string;
            };
        }[];
    };
}>> & {
    onPlaying?: ((...args: any[]) => any) | undefined;
    onReady?: ((...args: any[]) => any) | undefined;
}, {
    autoplay: boolean;
    mute: boolean;
    title: string;
    options: Record<string, any>;
    posterSources: unknown[];
}, {}>;
export default _default;
